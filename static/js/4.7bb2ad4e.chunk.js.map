{"version":3,"sources":["components/common/Paginator/Paginator.module.scss","components/Users/Users.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/Paginator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","../node_modules/reselect/es/index.js","redux/selectors/users-selectors.ts","components/Users/UsersContainer.tsx"],"names":["module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","Paginator","pageSize","totalItemsCount","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","filter","p","map","className","s","selectedPage","e","User","user","followingInProgress","follow","unfollow","to","id","src","photos","small","userAvatarDefault","styles","usersPhoto","alt","followed","disabled","some","u","name","status","Users","props","totalUsersCount","users","defaultEqualityCheck","a","b","areArgumentsShallowlyEqual","equalityCheck","prev","getDependencies","funcs","dependencies","every","dep","dependencyTypes","join","Error","createSelector","memoize","_len","arguments","memoizeOptions","_key","_len2","_key2","recomputations","resultFunc","pop","memoizedResultFunc","apply","concat","selector","params","resetRecomputations","createSelectorCreator","func","lastArgs","lastResult","UsersSelectorR","state","usersPage","PageSizeSelector","TotalUsersCountSelector","CurrentPageSelector","IsFetchingSelector","isFetching","FollowingInProgressSelector","UsersContainerClass","pageNumber","getUsers","this","Preloader","React","Component","UsersContainer","compose","connect","setCurrentPage","toggleIsFollowingProgress","requestUsers","withAuthRedirect"],"mappings":"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","file":"static/js/4.7bb2ad4e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__3bbAd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersPhoto\":\"Users_usersPhoto__23Jjl\",\"selectedPage\":\"Users_selectedPage__5oLbG\"};","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.scss'\r\n\r\ntype PropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n    portionSize: number\r\n}\r\n\r\n\r\nexport const Paginator: React.FC<PropsType> = ({pageSize, totalItemsCount, currentPage, onPageChanged, portionSize}) => {\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize)\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n    return (\r\n        <div>\r\n            {portionNumber > 1 &&  <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n            <div>\r\n                {pages\r\n                    .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                    .map(p => <span className={(currentPage === p) ? s.selectedPage : ''} onClick={(e) => {\r\n                        onPageChanged(p)\r\n                    }}>{p}</span>)}\r\n            </div>\r\n            {portionCount > portionNumber &&  <button onClick={() => {setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n        </div>\r\n    )\r\n}","import userAvatarDefault from \"../../assets/images/avatar-default.png\";\r\nimport styles from \"./Users.module.scss\";\r\nimport React from \"react\";\r\nimport {UserType} from \"../../redux/reducers/users-reducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: []\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const User: React.FC<PropsType> = ({\r\n    user,\r\n    followingInProgress, follow, unfollow\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <NavLink to={'/profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userAvatarDefault}\r\n                         className={styles.usersPhoto}\r\n                         alt='User'/>\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some((u: number) => u === user.id)}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }\r\n                              }>Unfollow</button>\r\n                    : <button disabled={followingInProgress.some((u: number) => u === user.id)}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }\r\n                              }>Follow</button>}\r\n            </div>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/reducers/users-reducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    onPageChanged: (pageNumber: number) => void\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\n\r\nexport const Users = (props: UsersPropsType) => {\r\n\r\n    return (\r\n        <div>\r\n            <Paginator pageSize={props.pageSize}\r\n                       totalItemsCount={props.totalUsersCount}\r\n                       currentPage={props.currentPage}\r\n                       onPageChanged={props.onPageChanged}\r\n                       portionSize={10}\r\n            />\r\n            {props.users.map(u => <User key={u.id}\r\n                                        user={u}\r\n                                        followingInProgress={props.followingInProgress}\r\n                                        follow={props.follow}\r\n                                        unfollow={props.unfollow}/>)}\r\n        </div>\r\n    )\r\n}","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {AppRootStateType} from \"../store\";\r\nimport {createSelector} from \"reselect\";\r\n\r\nexport const UsersSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n// An example of using Reselect library. Must be used only for complicated selectors.\r\nexport const UsersSelectorR = createSelector(UsersSelector, (users) => {\r\n    return users\r\n})\r\n\r\nexport const PageSizeSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const TotalUsersCountSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const CurrentPageSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const IsFetchingSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const FollowingInProgressSelector = (state: AppRootStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {\r\n    follow,\r\n    requestUsers,\r\n    setCurrentPage,\r\n    toggleIsFollowingProgress,\r\n    unfollow,\r\n    UserType\r\n} from \"../../redux/reducers/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    CurrentPageSelector,\r\n    FollowingInProgressSelector,\r\n    IsFetchingSelector,\r\n    PageSizeSelector,\r\n    TotalUsersCountSelector,\r\n    UsersSelectorR\r\n} from \"../../redux/selectors/users-selectors\";\r\n\r\nclass UsersContainerClass extends React.Component<PropsType, {}> {\r\n\r\n    componentDidMount() {\r\n        const {getUsers, currentPage, pageSize} = this.props\r\n\r\n        getUsers(currentPage, pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        const {getUsers, pageSize} = this.props\r\n\r\n        getUsers(pageNumber, pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users\r\n                users={this.props.users}\r\n                pageSize={this.props.pageSize}\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                follow={this.props.follow}\r\n                unfollow={this.props.unfollow}\r\n                followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state: CombinedStateType) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n// code before selectors\r\n\r\nlet mapStateToProps = (state: AppRootStateType) => {\r\n    return {\r\n        users: UsersSelectorR(state),\r\n        pageSize: PageSizeSelector(state),\r\n        totalUsersCount: TotalUsersCountSelector(state),\r\n        currentPage: CurrentPageSelector(state),\r\n        isFetching: IsFetchingSelector(state),\r\n        followingInProgress: FollowingInProgressSelector(state)\r\n    }\r\n}\r\n\r\nexport const UsersContainer = compose<React.ComponentType>(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unfollow,\r\n        setCurrentPage,\r\n        toggleIsFollowingProgress,\r\n        getUsers: requestUsers,\r\n    }),\r\n    withAuthRedirect,\r\n)(UsersContainerClass)\r\n\r\n// Types\r\ntype PropsType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n    toggleIsFollowingProgress: (isFetching: boolean, userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\n// Compose is alternative to writing the hoc hell, like in the line below.\r\n// export const UsersContainer = withAuthRedirect(connect(mapStateToProps, {\r\n//     follow,\r\n//     unfollow,\r\n//     setCurrentPage,\r\n//     toggleIsFollowingProgress,\r\n//     getUsers,\r\n// })(UsersContainerClass))\r\n\r\n// Instead of writing mapDispatchToProps like below, we simply can send the action creators\r\n// as an object like in the code above\r\n// let mapDispatchToProps = (dispatch: DispatchType) => {\r\n//     return {\r\n//         follow: (userId: number) => {\r\n//             dispatch(follow(userId))\r\n//         },\r\n//         unfollow: (userId: number) => {\r\n//             dispatch(unfollow(userId))\r\n//         },\r\n//         setUsers: (users: Array<UserType>) => {\r\n//             dispatch(setUsers(users))\r\n//         },\r\n//         setCurrentPage: (currentPage: number) => {\r\n//             dispatch(setCurrentPage(currentPage))\r\n//         },\r\n//         setTotalUsersCount: (count: number) => {\r\n//             dispatch(setUsersTotalCount(count))\r\n//         },\r\n//         toggleIsFetching: (isFetching: boolean) => {\r\n//             dispatch(setIsFetching(isFetching))\r\n//         }\r\n//     }\r\n// }"],"sourceRoot":""}